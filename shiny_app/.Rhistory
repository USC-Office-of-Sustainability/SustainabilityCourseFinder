departments
library(tidyverse)
departments %>% add_column(focused = NA)
departments = departments %>% add_column(focused = NA)
departments = departments %>% add_column(inclusive = NA)
departments = departments %>% add_column(notrelated = NA)
departments
for (department in pie_data$department){
mini_df = pie_data[pie_data$department == department, ]
department_classifications = unique(mini_df$sustainability_classification)
print(department_classifications)
# is_focused = FALSE
# is_inclusive = FALSE
# for (i in 1:nrow(mini_df)){
#   if (mini_df$sustainability_classification == "Focused"){
#     is_focused = TRUE
#   }
#   if (mini_df$sustainability_classification == "Inclusive"){
#     is_inclusive = TRUE
#   }
}
total = length(departments$departments)
notrelated = 0
inclusive = 0
focused = 0
rm(department)
rm(department_classifications)
for (department in pie_data$department){
mini_df = pie_data[pie_data$department == department, ]
department_classifications = unique(mini_df$sustainability_classification)
if ("Focused" %in% department_classifications){
focused = focused + 1
next
}
if ("Inclusive" %in% department_classifications){
inclusive = inclusive + 1
next
}
# if we get here that means department not related
notrelated = notrelated + 1
}
library(tidyverse)
pie_data <- read.csv("usc_courses_full.csv") # have not yet filtered by semester, need to add columns to dataframe
pie_data
total = length(departments$departments)
departments = unique(pie_data$department) # theres 179 departments
departments = data.frame(departments)
total = length(departments$departments)
departments
pie_data <- read.csv("usc_courses_full.csv") # have not yet filtered by semester, need to add columns to dataframe
department = unique(pie_data$department) # theres 179 departments
departments = data.frame(department)
departments
total = length(departments$departments)
total = length(departments$department)
notrelated = 0
inclusive = 0
focused = 0
departments
for (department in departments){
mini_df = pie_data[pie_data$department == department, ]
department_classifications = unique(mini_df$sustainability_classification)
if ("Focused" %in% department_classifications){
focused = focused + 1
next
}
if ("Inclusive" %in% department_classifications){
inclusive = inclusive + 1
next
}
# if we get here that means department not related
notrelated = notrelated + 1
}
for (i in 1:nrow(departments)){
mini_df = pie_data[pie_data$department == departments[i], ]
department_classifications = unique(mini_df$sustainability_classification)
if ("Focused" %in% department_classifications){
focused = focused + 1
next
}
if ("Inclusive" %in% department_classifications){
inclusive = inclusive + 1
next
}
# if we get here that means department not related
notrelated = notrelated + 1
}
for (i in 1:nrow(departments)){
mini_df = pie_data[pie_data$department == departments$department[i], ]
department_classifications = unique(mini_df$sustainability_classification)
if ("Focused" %in% department_classifications){
focused = focused + 1
next
}
if ("Inclusive" %in% department_classifications){
inclusive = inclusive + 1
next
}
# if we get here that means department not related
notrelated = notrelated + 1
}
focused + inclusive + notrelated
notrelated = 0
inclusive = 0
focused = 0
total = length(departments$department)
for (i in 1:nrow(departments)){
mini_df = pie_data[pie_data$department == departments$department[i], ]
department_classifications = unique(mini_df$sustainability_classification)
if ("Focused" %in% department_classifications){
focused = focused + 1
next
}
else if ("Inclusive" %in% department_classifications){
inclusive = inclusive + 1
next
}
else{
notrelated = notrelated + 1
}
}
127+49+3
runApp()
runApp()
runApp()
runApp()
runApp()
?pie
pie_data <- read.csv("usc_courses_full.csv") # have not yet filtered by semester, need to add columns to dataframe
dim(pie_data)
pie_data <- sustainability_related # have not yet filtered by semester, need to add columns to dataframe
# data for pie chart
sustainability_related = read.csv("usc_courses_full.csv")
sum_notrelated = 0
sum_inclusive = 0
sum_focused = 0
for (i in 1:nrow(pie_data)){
if (pie_data$sustainability_classification[i] == "Not Related"){
sum_notrelated = sum_notrelated + pie_data$N.Sections[i]
}
if (pie_data$sustainability_classification[i] == "Inclusive"){
sum_inclusive = sum_inclusive + pie_data$N.Sections[i]
}
if (pie_data$sustainability_classification[i] == "Focused"){
sum_focused = sum_focused + pie_data$N.Sections[i]
}
}
vals=c(sum_notrelated, sum_focused, sum_inclusive)
vals
sum(vals)
runApp()
getwd()
runApp()
runApp()
runApp()
runApp()
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
# install.packages("ggplot2")
library(ggplot2)
shiny::runApp()
pie = data.frame(labels)
labels=c(" Not Related", " Focused", " Inclusive")
pie = data.frame(labels)
pie
pie = data.frame(labels, vals)
pie
runApp()
pie
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
shiny::runApp()
runApp()
test = function(){
x = 4
y = 5
return (x/y)
return (y/x)
}
test = function(){
x = 4
y = 5
return (x/y)
return (y/x)
}
x = test
x
test = function(){
return("hello")
return("hi")
}
test
x = test()
x
x[2]
x[1]
x = test()[2]
x
x
x = test()[1]
test
x
return("hello", "hi")
test = function(){
return("hello", "hi")
}
x = test()
x = test()[1]
getwd()
# filter the master data after the mapping
master_data = read.csv("master_course_sdg_data.csv")
filter = function(data, threshold){
mini_df = data[data$weight > threshold, ]
return(mini_df)
}
filtered_data = filter(master_data)
filtered_data = filter(master_data, 0.5)
dim(master_data)
dim(filtered_data)
write.csv(filtered_data, "master_course_sdg_data_filtered.csv", row.names=F)
# data containing all course titles
usc_courses = read.csv("usc_courses.csv")
getwd()
setwd("/Users/btinsley/Desktop/USC-SDGmap/Data/")
# data containing all course titles
usc_courses = read.csv("usc_courses.csv")
# data containing all course titles
usc_courses = read.csv("usc_courses.csv")
# data containing what courses map to which goals
# this is the filtered data
master_data = read.csv("master_course_sdg_data_filtered.csv")
# grab the unique class titles
classes = unique(usc_courses$course_title)
sustainability = data.frame(classes)
# create column to store goals that class maps to
sustainability = sustainability %>% add_column(goals = NA)
# create column to store sustainability-relatedness
sustainability = sustainability %>% add_column(related = NA)
# criteria lists
social_economic_goals = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17)
environment_goals = c(13, 14, 15)
index = 1
for (class in sustainability$classes){
# subset master data to just the rows for that class and grab the unique goals
mini_df = unique(master_data[master_data$course_title == class, "goal"])
# combine all the goals into a string to be added to the goals column in df
goals = paste(mini_df, collapse=",")
#update the goals column of df to be this string "goals"
sustainability$goals[index] = goals
index = index + 1
}
sustainability
# now need to go through and check criteria and update the related column accordingly
for (i in 1:nrow(sustainability)){
# first check if it is null
if (sustainability$goals[i] == ""){
sustainability$related[i] = "Not Related"
next
}
# grab the goals in each row
goals = as.list(strsplit(sustainability$goals[i], ",")[[1]])
# set these booleans to false for each row to start
is_social_economic = FALSE
is_environment = FALSE
for (j in 1:length(goals)){
if (goals[j] %in% social_economic_goals){
is_social_economic = TRUE
}
if (goals[j] %in% environment_goals){
is_environment = TRUE
}
}
# now we should know if there was at least one of the criteria present
if (is_social_economic & is_environment){
sustainability$related[i] = "Focused"
}
if (is_social_economic & !is_environment){
sustainability$related[i] = "Inclusive"
}
if (!is_social_economic & is_environment){
sustainability$related[i] = "Inclusive"
}
}
sustainability
# need to rename the columns
names(sustainability)[names(sustainability) == 'classes'] <- "course_title"
names(sustainability)[names(sustainability) == 'related'] <- "sustainability_classification"
names(sustainability)[names(sustainability) == 'goals'] <- "all_goals"
sum(sustainability$sustainability_classification == "Focused")
sum(sustainability$sustainability_classification == "Inclusive")
sum(sustainability$sustainability_classification == "Not Related")
write.csv(sustainability, "sustainability_related_courses_filtered.csv", row.names = F)
# want to create a dataframe with more information for pie charts using joins
sustainability = read.csv("sustainability_related_courses_filtered.csv")
course_data = usc_courses %>% left_join(sustainability, by="course_title")
write.csv(course_data, "usc_courses_full_filtered.csv", row.names = F)
runApp('~/Desktop/USC-SDGmap/shiny_app')
# read in the filtered or unfiltered data
classes = read.csv("master_course_sdg_data_filtered.csv")
# read in the filtered or unfiltered data
classes = read.csv("master_course_sdg_data_filtered.csv")
sdg_colors <- c('#e5243b', '#DDA63A', '#4C9F38', '#C5192D', '#FF3A21', '#26BDE2',
'#FCC30B', '#A21942', '#FD6925', '#DD1367', '#FD9D24', '#BF8B2E',
'#3F7E44', '#0A97D9', '#56C02B', '#00689D', '#19486A')
exclude_words <- c() #this has already been accounted for in earlier files
# data for pie chart
sustainability_related = read.csv("usc_courses_full_filtered.csv")
runApp('~/Desktop/USC-SDGmap/shiny_app')
runApp('~/Desktop/USC-SDGmap/shiny_app')
runApp('~/Desktop/USC-SDGmap/shiny_app')
runApp('~/Desktop/USC-SDGmap/shiny_app')
runApp('~/Desktop/USC-SDGmap/shiny_app')
getwd()
setwd("/Users/btinsley/Desktop/USC-SDGmap/shiny_app/")
runApp()
usc_courses = read.csv("usc_courses_full.csv")
usc_courses = read.csv("usc_courses_full.csv")
names(usc_courses)
runApp()
usc_courses["year"] = NA
usc_courses$year
usc_courses["year"] = AY19
usc_courses["year"] = "AY19"
usc_courses$year
write.csv("usc_courses_full.csv")
write.csv(usc_courses, "usc_courses_full.csv", row.names=F)
master_data = read.csv("master_course_sdg_data.csv")
master_data = read.csv("master_course_sdg_data.csv")
master_data["year"] = "AY19"
write.csv(master_data, "master_course_sdg_data.csv", row.names=F)
# filter the master data after the mapping
master_data = read.csv("master_course_sdg_data.csv")
filtered_data = filter(master_data, 0.5)
# function to filter data to data only with weight above certain threshold
filter = function(data, threshold){
mini_df = data[data$weight > threshold, ]
return(mini_df)
}
# filter the master data after the mapping
master_data = read.csv("master_course_sdg_data.csv")
filtered_data = filter(master_data, 0.5)
dim(master_data)
dim(filtered_data)
write.csv(filtered_data, "master_course_sdg_data_filtered.csv", row.names=F)
# data containing all course titles
usc_courses = read.csv("usc_courses_full.csv")
# data containing what courses map to which goals
# this is the filtered data
master_data = read.csv("master_course_sdg_data_filtered.csv")
# grab the unique class titles
classes = unique(usc_courses$course_title)
sustainability = data.frame(classes)
# create column to store goals that class maps to
sustainability = sustainability %>% add_column(goals = NA)
# create column to store sustainability-relatedness
sustainability = sustainability %>% add_column(related = NA)
# criteria lists
social_economic_goals = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17)
environment_goals = c(13, 14, 15)
index = 1
for (class in sustainability$classes){
# subset master data to just the rows for that class and grab the unique goals
mini_df = unique(master_data[master_data$course_title == class, "goal"])
# combine all the goals into a string to be added to the goals column in df
goals = paste(mini_df, collapse=",")
#update the goals column of df to be this string "goals"
sustainability$goals[index] = goals
index = index + 1
}
sustainability
# now need to go through and check criteria and update the related column accordingly
for (i in 1:nrow(sustainability)){
# first check if it is null
if (sustainability$goals[i] == ""){
sustainability$related[i] = "Not Related"
next
}
# grab the goals in each row
goals = as.list(strsplit(sustainability$goals[i], ",")[[1]])
# set these booleans to false for each row to start
is_social_economic = FALSE
is_environment = FALSE
for (j in 1:length(goals)){
if (goals[j] %in% social_economic_goals){
is_social_economic = TRUE
}
if (goals[j] %in% environment_goals){
is_environment = TRUE
}
}
# now we should know if there was at least one of the criteria present
if (is_social_economic & is_environment){
sustainability$related[i] = "Focused"
}
if (is_social_economic & !is_environment){
sustainability$related[i] = "Inclusive"
}
if (!is_social_economic & is_environment){
sustainability$related[i] = "Inclusive"
}
}
# need to rename the columns
names(sustainability)[names(sustainability) == 'classes'] <- "course_title"
names(sustainability)[names(sustainability) == 'related'] <- "sustainability_classification"
names(sustainability)[names(sustainability) == 'goals'] <- "all_goals"
sustainability
write.csv(sustainability, "sustainability_related_courses_filtered.csv", row.names = F)
# want to create a dataframe with more information for pie charts using joins
sustainability = read.csv("sustainability_related_courses_filtered.csv")
course_data = usc_courses %>% left_join(sustainability, by="course_title")
write.csv(course_data, "usc_courses_full_filtered.csv", row.names = F)
runApp()
# read in the filtered or unfiltered data
classes = read.csv("master_course_sdg_data_filtered.csv")
# data for pie chart
sustainability_related = read.csv("usc_courses_full_filtered.csv")
runApp()
getwd()
runApp()
runApp()
# data containing all course titles
usc_courses = read.csv("usc_courses_full.csv")
# data containing what courses map to which goals
# this is the filtered data
master_data = read.csv("master_course_sdg_data_filtered.csv")
# grab the unique class titles
classes = unique(usc_courses$course_title)
sustainability = data.frame(classes)
# create column to store goals that class maps to
sustainability = sustainability %>% add_column(goals = NA)
# create column to store sustainability-relatedness
sustainability = sustainability %>% add_column(related = NA)
# criteria lists
social_economic_goals = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17)
environment_goals = c(13, 14, 15)
index = 1
for (class in sustainability$classes){
# subset master data to just the rows for that class and grab the unique goals
mini_df = unique(master_data[master_data$course_title == class, "goal"])
# combine all the goals into a string to be added to the goals column in df
goals = paste(mini_df, collapse=",")
#update the goals column of df to be this string "goals"
sustainability$goals[index] = goals
index = index + 1
}
sustainability
# now need to go through and check criteria and update the related column accordingly
for (i in 1:nrow(sustainability)){
# first check if it is null
if (sustainability$goals[i] == ""){
sustainability$related[i] = "Not Related"
next
}
# grab the goals in each row
goals = as.list(strsplit(sustainability$goals[i], ",")[[1]])
# set these booleans to false for each row to start
is_social_economic = FALSE
is_environment = FALSE
for (j in 1:length(goals)){
if (goals[j] %in% social_economic_goals){
is_social_economic = TRUE
}
if (goals[j] %in% environment_goals){
is_environment = TRUE
}
}
# now we should know if there was at least one of the criteria present
if (is_social_economic & is_environment){
sustainability$related[i] = "Focused"
}
if (is_social_economic & !is_environment){
sustainability$related[i] = "Inclusive"
}
if (!is_social_economic & is_environment){
sustainability$related[i] = "Inclusive"
}
}
sustainability
names(sustainability)[names(sustainability) == 'classes'] <- "course_title"
names(sustainability)[names(sustainability) == 'related'] <- "sustainability_classification"
names(sustainability)[names(sustainability) == 'goals'] <- "all_goals"
x = read.csv("usc_courses_full.csv")
y = x %>% select(-c("sustainability_classification, all_goals"))
names(x)
y = x %>% select(-c("sustainability_classification", "all_goals"))
names(y)
write.csv(y, "usc_courses.csv", row.names = F)
# want to create a dataframe with more information for pie charts using joins
sustainability = read.csv("sustainability_related_courses_filtered.csv")
# data containing all course titles
usc_courses = read.csv("usc_courses.csv")
names(usc_courses)
dim(usc_courses)
# want to create a dataframe with more information for pie charts using joins
sustainability = read.csv("sustainability_related_courses_filtered.csv")
course_data = usc_courses %>% left_join(sustainability, by="course_title")
write.csv(course_data, "usc_courses_full_filtered.csv", row.names = F)
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
runApp()
